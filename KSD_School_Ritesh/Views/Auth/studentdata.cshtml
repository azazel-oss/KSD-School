@model KSD_School_Ritesh.Models.Student
@{
    Layout = null;
}
<style>
    @@import url(//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.min.css);

    body {
        align-items: center;
        background-color: #000;
        display: flex;
        justify-content: center;
        height: 100vh;
    }

    .form {
        background-color: #15172b;
        border-radius: 20px;
        box-sizing: border-box;
        height: 500px;
        padding: 20px;
        width: 320px;
    }

    .title {
        color: #eee;
        font-family: sans-serif;
        font-size: 36px;
        font-weight: 600;
        margin-top: 30px;
    }

    .subtitle {
        color: #eee;
        font-family: sans-serif;
        font-size: 16px;
        font-weight: 600;
        margin-top: 10px;
    }

    .input-container {
        height: 40px;
        position: relative;
        width: 100%;
    }

    .ic1 {
        margin-top: 7px;
    }

    .ic2 {
        margin-top:7px;
    }.ic3 {
        margin-top: 7px;
    }.ic4 {
        margin-top: 7px;
    }.ic5 {
        margin-top: 7px;
    }.ic6 {
        margin-top: 7px;
    }.ic7 {
        margin-top: 7px;
    }

    .input {
        background-color: #303245;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
        width: 100%;
    }

    .cut {
        background-color: #15172b;
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 76px;
    }

    .cut-short {
        width: 50px;
    }

    .input:focus ~ .cut,
    .input:not(:placeholder-shown) ~ .cut {
        transform: translateY(8px);
    }

    .placeholder {
        color: #65657b;
        font-family: sans-serif;
        left: 20px;
        line-height: 14px;
        pointer-events: none;
        position: absolute;
        transform-origin: 0 50%;
        transition: transform 200ms, color 200ms;
        top: 20px;
    }

    .input:focus ~ .placeholder,
    .input:not(:placeholder-shown) ~ .placeholder {
        transform: translateY(-30px) translateX(10px) scale(0.75);
    }

    .input:not(:placeholder-shown) ~ .placeholder {
        color: #808097;
    }

    .input:focus ~ .placeholder {
        color: #dc2f55;
    }

    .submit {
        background-color: #06b;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        cursor: pointer;
        font-size: 18px;
        height: 50px;
        margin-top: 38px;
        // outline: 0;
        text-align: center;
        width: 100%;
    }

        .submit:active {
            background-color: #06b;
        }
</style>
<center>
    <div class="form">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="subtitle">Data required for registeration</div>

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
                        @Html.LabelFor(model => model.Student_id, htmlAttributes: new { @class = "placeholder" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Student_id, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Student_id, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="input-container ic1">

                    <div class="form-group">
                        <label for="firstname" class="placeholder">Name</label>
                        @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "placeholder" })*@
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="input-container ic2">
                    <div class="form-group">
                        <label for="firstname" class="placeholder">Father name</label>
                        @*@Html.LabelFor(model => model.Father_name, htmlAttributes: new { @class = "placeholder" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Father_name, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Father_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="input-container ic3">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Father_contact, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Father_contact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="input-container ic4">
                    <div class="form-group">
                        <label for="firstname" class="placeholder">Address</label>
                        @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "placeholder" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="input-container ic5">
                    <div class="form-group">
                        <label for="firstname" class="placeholder">Class Id</label>
                        @*@Html.LabelFor(model => model.Class_id, htmlAttributes: new { @class = "placeholder" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Class_id, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Class_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="input-container ic6">
                    <div class="form-group">
                        <label for="firstname" class="placeholder">Emerergency Contact</label>
                        @*@Html.LabelFor(model => model.Emergency_Contact, htmlAttributes: new { @class = "placeholder" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emergency_Contact, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.Emergency_Contact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="input-container ic7">
                    <div class="form-group">
                        <label for="firstname" class="placeholder">Section Id</label>
                        @*@Html.LabelFor(model => model.section_id, htmlAttributes: new { @class = "placeholder" })*@
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.section_id, new { htmlAttributes = new { @class = "input" } })
                            @Html.ValidationMessageFor(model => model.section_id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="submit" />
                    </div>
                </div>
            </div>
        }
    </div>
</center>


